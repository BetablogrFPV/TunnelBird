/*

basic font module
developed by Joscha Sch√∂rner

example:

RGBA color1 = {255, 0, 100, 250};
drawString("TEST", 10, 10, 8, color1);

drawString(text as string, position x as float, position y as float, letter size in px, rgba color as struct);

*/


#ifndef FONT_H
#define FONT_H

#include <string.h>
#include <stdio.h>

#include <GL/gl.h>

#include "typedef_RGB_RGBA_color.h"


typedef struct {
    char character;
    uint8_t bitmap[8];
} FontChar;

static const FontChar font8x8[] = {
    { 'A', {
        0b00011000,
        0b00100100,
        0b01000010,
        0b01000010,
        0b01111110,
        0b01000010,
        0b01000010,
        0b00000000
    } },
    { 'B', {
        0b01111100,
        0b01000010,
        0b01000010,
        0b01111100,
        0b01000010,
        0b01000010,
        0b01111100,
        0b00000000
    } },
    { 'C', {
        0b00111100,
        0b01000010,
        0b01000000,
        0b01000000,
        0b01000000,
        0b01000010,
        0b00111100,
        0b00000000
    } },
    { 'D', {
        0b01111100,
        0b01000010,
        0b01000010,
        0b01000010,
        0b01000010,
        0b01000010,
        0b01111100,
        0b00000000
    } },
    { 'E', {
        0b01111110,
        0b01000000,
        0b01000000,
        0b01111100,
        0b01000000,
        0b01000000,
        0b01111110,
        0b00000000
    } },
    { 'F', {
        0b01111110,
        0b01000000,
        0b01000000,
        0b01111100,
        0b01000000,
        0b01000000,
        0b01000000,
        0b00000000
    } },
    { 'G', {
        0b00111100,
        0b01000010,
        0b01000000,
        0b01001110,
        0b01000010,
        0b01000010,
        0b00111100,
        0b00000000
    } },
    { 'H', {
        0b01000010,
        0b01000010,
        0b01000010,
        0b01111110,
        0b01000010,
        0b01000010,
        0b01000010,
        0b00000000
    } },
    { 'I', {
        0b00111100,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00111100,
        0b00000000
    } },
    { 'J', {
        0b00011110,
        0b00000100,
        0b00000100,
        0b00000100,
        0b00000100,
        0b01000100,
        0b00111000,
        0b00000000
    } },
    { 'K', {
        0b01000010,
        0b01000100,
        0b01001000,
        0b01110000,
        0b01001000,
        0b01000100,
        0b01000010,
        0b00000000
    } },
    { 'L', {
        0b01000000,
        0b01000000,
        0b01000000,
        0b01000000,
        0b01000000,
        0b01000000,
        0b01111110,
        0b00000000
    } },
    { 'M', {
        0b01000010,
        0b01100110,
        0b01011010,
        0b01000010,
        0b01000010,
        0b01000010,
        0b01000010,
        0b00000000
    } },
    { 'N', {
        0b01000010,
        0b01100010,
        0b01010010,
        0b01001010,
        0b01000110,
        0b01000010,
        0b01000010,
        0b00000000
    } },
    { 'O', {
        0b00111100,
        0b01000010,
        0b01000010,
        0b01000010,
        0b01000010,
        0b01000010,
        0b00111100,
        0b00000000
    } },
    { 'P', {
        0b01111100,
        0b01000010,
        0b01000010,
        0b01111100,
        0b01000000,
        0b01000000,
        0b01000000,
        0b00000000
    } },
    { 'Q', {
        0b00111100,
        0b01000010,
        0b01000010,
        0b01000010,
        0b01001010,
        0b01000100,
        0b00111010,
        0b00000000
    } },
    { 'R', {
        0b01111100,
        0b01000010,
        0b01000010,
        0b01111100,
        0b01001000,
        0b01000100,
        0b01000010,
        0b00000000
    } },
    { 'S', {
        0b00111100,
        0b01000010,
        0b01000000,
        0b00111100,
        0b00000010,
        0b01000010,
        0b00111100,
        0b00000000
    } },
    { 'T', {
        0b01111110,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00000000
    } },
    { 'U', {
        0b01000010,
        0b01000010,
        0b01000010,
        0b01000010,
        0b01000010,
        0b01000010,
        0b00111100,
        0b00000000
    } },
    { 'V', {
        0b01000010,
        0b01000010,
        0b01000010,
        0b01000010,
        0b01000010,
        0b00100100,
        0b00011000,
        0b00000000
    } },
    { 'W', {
        0b01000010,
        0b01000010,
        0b01000010,
        0b01000010,
        0b01011010,
        0b01100110,
        0b01000010,
        0b00000000
    } },
    { 'X', {
        0b01000010,
        0b01000010,
        0b00100100,
        0b00011000,
        0b00100100,
        0b01000010,
        0b01000010,
        0b00000000
    } },
    { 'Y', {
        0b01000010,
        0b01000010,
        0b01000010,
        0b00111100,
        0b00001000,
        0b00001000,
        0b00001000,
        0b00000000
    } },
    { 'Z', {
        0b01111110,
        0b00000010,
        0b00000100,
        0b00001000,
        0b00010000,
        0b00100000,
        0b01111110,
        0b00000000
    } },
    { '0', {
        0b00111100,
        0b01000010,
        0b01000110,
        0b01001010,
        0b01010010,
        0b01100010,
        0b00111100,
        0b00000000
    } },
    { '1', {
        0b00010000,
        0b00110000,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00111000,
        0b00000000
    } },
    { '2', {
        0b00111100,
        0b01000010,
        0b00000010,
        0b00001100,
        0b00110000,
        0b01000000,
        0b01111110,
        0b00000000
    } },
    { '3', {
        0b00111100,
        0b01000010,
        0b00000010,
        0b00011100,
        0b00000010,
        0b01000010,
        0b00111100,
        0b00000000
    } },
    { '4', {
        0b00000100,
        0b00001100,
        0b00010100,
        0b00100100,
        0b01111110,
        0b00000100,
        0b00000100,
        0b00000000
    } },
    { '5', {
        0b01111110,
        0b01000000,
        0b01111100,
        0b00000010,
        0b00000010,
        0b01000010,
        0b00111100,
        0b00000000
    } },
    { '6', {
        0b00111100,
        0b01000000,
        0b01111100,
        0b01000010,
        0b01000010,
        0b01000010,
        0b00111100,
        0b00000000
    } },
    { '7', {
        0b01111110,
        0b00000010,
        0b00000100,
        0b00001000,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00000000
    } },
    { '8', {
        0b00111100,
        0b01000010,
        0b01000010,
        0b00111100,
        0b01000010,
        0b01000010,
        0b00111100,
        0b00000000
    } },
    { '9', {
        0b00111100,
        0b01000010,
        0b01000010,
        0b00111110,
        0b00000010,
        0b00000100,
        0b00111000,
        0b00000000
    } },
    { '+', {
        0b00000000,
        0b00010000,
        0b00010000,
        0b01111100,
        0b00010000,
        0b00010000,
        0b00000000,
        0b00000000
    } },
    { '-', {
        0b00000000,
        0b00000000,
        0b00000000,
        0b01111100,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000
    } },
    { '/', {
        0b00000000,
        0b00000100,
        0b00000100,
        0b00001000,
        0b00010000,
        0b0010000,
        0b00100000,
        0b00000000
    } },
    { '.', {
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00100000,
        0b00000000
    } },
    { ':', {
        0b00000000,
        0b00100000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00100000,
        0b00000000,
        0b00000000
    } },
    { '!', {
        0b00010000,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00000000,
        0b00010000,
        0b00000000
    } },
    { '?', {
        0b00011000,
        0b00100100,
        0b00000100,
        0b00001000,
        0b00010000,
        0b00000000,
        0b00010000,
        0b00000000
    } },
    
    
    
    
            
};

static const int FONT8X8_COUNT = sizeof(font8x8) / sizeof(FontChar);

static const uint8_t* find_char_bitmap(char c) {
    for (int i = 0; i < FONT8X8_COUNT; ++i) {
        if (font8x8[i].character == c) {
            return font8x8[i].bitmap;
        }
    }
    return NULL;
}

void drawChar(char c, float x, float y, float pixelSize) {
    const uint8_t* bitmap = find_char_bitmap(c);
    if (!bitmap) return;

    glBegin(GL_QUADS);
    for (int row = 0; row < 8; ++row) {
        for (int col = 0; col < 8; ++col) {
            if ((bitmap[row] >> (7 - col)) & 1) {
                float px = x + col * pixelSize;
                float py = y + (7 - row) * pixelSize;

                glVertex2f(px, py);
                glVertex2f(px + pixelSize, py);
                glVertex2f(px + pixelSize, py + pixelSize);
                glVertex2f(px, py + pixelSize);
            }
        }
    }
    glEnd();
}

void drawString(char* string, float x, float y, float letterSize, RGBA color) {
    float pixelSize = letterSize / 8;
    glColor4f(color.r / 255.0f, color.g / 255.0f, color.b / 255.0f, color.a / 255.0f);
    for (int i = 0; i < strlen(string); i++) {
        drawChar(string[i], x, y, pixelSize);
        x += letterSize;
    }
    glColor4f(1.0f, 1.0f, 1.0f, 1.0f);
}

void drawNumber(int number, float x, float y, float letterSize, RGBA color) {
    char buffer[12];
    snprintf(buffer, sizeof(buffer), "%d", number);
    drawString(buffer, x, y, letterSize, color);
}

#endif
